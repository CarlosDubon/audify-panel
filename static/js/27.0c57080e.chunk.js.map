{"version":3,"sources":["reusable/DocsCallout.js","reusable/DocsLink.js","reusable/Example.js","views/components/buttons/dropdowns/Dropdowns.js"],"names":["DocsCallout","props","href","name","plural","slice","_href","packageJson","config","coreui_library_short_version","color","className","target","React","memo","DocsLink","text","rest","rel","Example","children","variant","active","visible","Dropdowns","xs","map","index","split","size","dark","type","id","component","direction"],"mappings":"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","file":"static/js/27.0c57080e.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react'\n\nimport packageJson from '../../package.json'\n\nconst DocsCallout = (props) => {\n  const { href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      A React {name} component {plural ? 'have' : 'has'} been created as a native React.js version\n      of Bootstrap {name}. {name} {plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport packageJson from '../../package.json'\n\nconst Example = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"tabs\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon name=\"cil-media-play\" className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon name=\"cil-code\" className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(Example)\n","import React from 'react'\nimport {\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CRow,\n} from '@coreui/react'\nimport { DocsCallout, Example } from 'src/reusable'\n\nconst Dropdowns = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <DocsCallout name=\"Dropdown\" href=\"components/dropdown\" />\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Dropdown</strong> <small>Single button</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Here&#39;s how you can put them to work with either <code>&lt;button&gt;</code>{' '}\n              elements:\n            </p>\n            <Example href=\"components/dropdown#single-button\">\n              <CDropdown>\n                <CDropdownToggle color=\"secondary\">Dropdown button</CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            </Example>\n            <p className=\"text-medium-emphasis small\">\n              The best part is you can do this with any button variant, too:\n            </p>\n            <Example href=\"components/dropdown#single-button\">\n              <>\n                {['primary', 'secondary', 'success', 'info', 'warning', 'danger'].map(\n                  (color, index) => (\n                    <CDropdown variant=\"btn-group\" key={index}>\n                      <CDropdownToggle color={color}>{color}</CDropdownToggle>\n                      <CDropdownMenu>\n                        <CDropdownItem href=\"#\">Action</CDropdownItem>\n                        <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                        <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                        <CDropdownDivider />\n                        <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                      </CDropdownMenu>\n                    </CDropdown>\n                  ),\n                )}\n              </>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Dropdown</strong> <small>Split button</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Similarly, create split button dropdowns with virtually the same markup as single\n              button dropdowns, but with the addition of boolean prop <code>split</code> for proper\n              spacing around the dropdown caret.\n            </p>\n            <p className=\"text-medium-emphasis small\">\n              We use this extra class to reduce the horizontal <code>padding</code> on either side\n              of the caret by 25% and remove the <code>margin-left</code> that&#39;s attached for\n              normal button dropdowns. Those additional changes hold the caret centered in the split\n              button and implement a more properly sized hit area next to the main button.\n            </p>\n            <Example href=\"components/dropdown#split-button\">\n              <>\n                {['primary', 'secondary', 'success', 'info', 'warning', 'danger'].map(\n                  (color, index) => (\n                    <CDropdown variant=\"btn-group\" key={index}>\n                      <CButton color={color}>{color}</CButton>\n                      <CDropdownToggle color={color} split />\n                      <CDropdownMenu>\n                        <CDropdownItem href=\"#\">Action</CDropdownItem>\n                        <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                        <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                        <CDropdownDivider />\n                        <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                      </CDropdownMenu>\n                    </CDropdown>\n                  ),\n                )}\n              </>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Dropdown</strong> <small>Sizing</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Button dropdowns work with buttons of all sizes, including default and split dropdown\n              buttons.\n            </p>\n            <Example href=\"components/dropdown#sizing\">\n              <CDropdown variant=\"btn-group\">\n                <CDropdownToggle color=\"secondary\" size=\"lg\">\n                  Large button\n                </CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n              <CDropdown variant=\"btn-group\">\n                <CButton color=\"secondary\" size=\"lg\">\n                  Large split button\n                </CButton>\n                <CDropdownToggle color=\"secondary\" size=\"lg\" split />\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            </Example>\n            <Example href=\"components/dropdown#sizing\">\n              <CDropdown variant=\"btn-group\">\n                <CDropdownToggle color=\"secondary\" size=\"sm\">\n                  Small button\n                </CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n              <CDropdown variant=\"btn-group\">\n                <CButton color=\"secondary\" size=\"sm\">\n                  Small split button\n                </CButton>\n                <CDropdownToggle color=\"secondary\" size=\"sm\" split />\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Dropdown</strong> <small>Single button</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Opt into darker dropdowns to match a dark navbar or custom style by set{' '}\n              <code>dark</code> property. No changes are required to the dropdown items.\n            </p>\n            <Example href=\"components/dropdown#dark-dropdowns\">\n              <CDropdown dark>\n                <CDropdownToggle color=\"secondary\">Dropdown button</CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            </Example>\n            <p className=\"text-medium-emphasis small\">And putting it to use in a navbar:</p>\n            <Example href=\"components/dropdown#dark-dropdowns\">\n              <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <div className=\"container-fluid\">\n                  <a className=\"navbar-brand\" href=\"https://coreui.io/react/\">\n                    Navbar\n                  </a>\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-coreui-toggle=\"collapse\"\n                    data-coreui-target=\"#navbarNavDarkDropdown\"\n                    aria-controls=\"navbarNavDarkDropdown\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\"\n                  >\n                    <span className=\"navbar-toggler-icon\"></span>\n                  </button>\n                  <div className=\"collapse navbar-collapse\" id=\"navbarNavDarkDropdown\">\n                    <ul className=\"navbar-nav\">\n                      <CDropdown dark component=\"li\" variant=\"nav-item\">\n                        <CDropdownToggle>Dropdown</CDropdownToggle>\n                        <CDropdownMenu>\n                          <CDropdownItem href=\"#\">Action</CDropdownItem>\n                          <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                          <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                          <CDropdownDivider />\n                          <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                        </CDropdownMenu>\n                      </CDropdown>\n                    </ul>\n                  </div>\n                </div>\n              </nav>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Dropdown</strong> <small>Dropup</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Trigger dropdown menus above elements by adding{' '}\n              <code>direction=&#34;dropup&#34;</code> to the <code>&lt;CDropdown&gt;</code>{' '}\n              component.\n            </p>\n            <Example href=\"components/dropdown#dropup\">\n              <CDropdown variant=\"btn-group\" direction=\"dropup\">\n                <CDropdownToggle color=\"secondary\">Dropdown</CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n              <CDropdown variant=\"btn-group\" direction=\"dropup\">\n                <CButton color=\"secondary\">Small split button</CButton>\n                <CDropdownToggle color=\"secondary\" split />\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Dropdown</strong> <small>Dropright</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Trigger dropdown menus at the right of the elements by adding{' '}\n              <code>direction=&#34;dropend&#34;</code> to the <code>&lt;CDropdown&gt;</code>{' '}\n              component.\n            </p>\n            <Example href=\"components/dropdown#dropright\">\n              <CDropdown variant=\"btn-group\" direction=\"dropend\">\n                <CDropdownToggle color=\"secondary\">Dropdown</CDropdownToggle>\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n              <CDropdown variant=\"btn-group\" direction=\"dropend\">\n                <CButton color=\"secondary\">Small split button</CButton>\n                <CDropdownToggle color=\"secondary\" split />\n                <CDropdownMenu>\n                  <CDropdownItem href=\"#\">Action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                  <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                  <CDropdownDivider />\n                  <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                </CDropdownMenu>\n              </CDropdown>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Dropdown</strong> <small>Dropleft</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Trigger dropdown menus at the left of the elements by adding{' '}\n              <code>direction=&#34;dropstart&#34;</code> to the <code>&lt;CDropdown&gt;</code>{' '}\n              component.\n            </p>\n            <Example href=\"components/dropdown#dropleft\">\n              <CButtonGroup>\n                <CDropdown variant=\"btn-group\" direction=\"dropstart\">\n                  <CDropdownToggle color=\"secondary\" split />\n                  <CDropdownMenu>\n                    <CDropdownItem href=\"#\">Action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Another action</CDropdownItem>\n                    <CDropdownItem href=\"#\">Something else here</CDropdownItem>\n                    <CDropdownDivider />\n                    <CDropdownItem href=\"#\">Separated link</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CButton color=\"secondary\">Small split button</CButton>\n              </CButtonGroup>\n            </Example>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Dropdowns\n"],"sourceRoot":""}